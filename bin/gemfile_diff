#!/usr/bin/env ruby

require_relative '../lib/whiskers'
require 'optparse'
require 'json'

def parse_options
  options = {}
  parser = OptionParser.new do |opts|
    opts.banner = "Usage: gemfile_diff [options]"

    opts.separator ""
    opts.separator "Options:"

    opts.on("-h", "--help", "Show this help message") do
      puts opts
      exit
    end

    opts.on("-v", "--version", "Show version") do
      puts Whiskers::VERSION
      exit
    end

    opts.on("--json", "Output in JSON format") do
      options[:json] = true
    end

    opts.on("--old LOCKFILE", "Path to old Gemfile.lock") do |path|
      options[:old_lockfile] = path
    end

    opts.on("--new LOCKFILE", "Path to new Gemfile.lock") do |path|
      options[:new_lockfile] = path
    end
  end

  begin
    parser.parse!
  rescue OptionParser::InvalidOption => e
    puts "Error: #{e.message}"
    puts parser
    exit 1
  end

  unless options[:old_lockfile] && options[:new_lockfile]
    puts "Error: Both --old and --new lockfiles are required"
    puts parser
    exit 1
  end

  # Validate files exist
  [options[:old_lockfile], options[:new_lockfile]].each do |file|
    unless File.exist?(file)
      puts "Error: File '#{file}' not found"
      exit 1
    end
  end

  options
end

def process_diff(old_lockfile, new_lockfile, json: false)
  diff = Whiskers::GemfileLockDiff.new(old_lockfile, new_lockfile)

  if json
    output = {
      added: diff.new_dependencies.sort_by(&:name).map { |dep|
        { name: dep.name, version: dep.version }
      },
      changed: diff.changed_dependencies.sort_by { |c| c.from.name }.map { |change|
        {
          name: change.from.name,
          old_version: change.from.version,
          new_version: change.to.version
        }
      }
    }
    puts JSON.pretty_generate(output)
  else
    if diff.new_dependencies.any?
      puts "\nAdded gems:"
      diff.new_dependencies.sort_by(&:name).each do |dep|
        puts "  + #{dep.name} (#{dep.version})"
      end
    end

    if diff.changed_dependencies.any?
      puts "\nChanged versions:"
      diff.changed_dependencies.sort_by { |c| c.from.name }.each do |change|
        puts "  ~ #{change.from.name}: #{change.from.version} â†’ #{change.to.version}"
      end
    end

    if diff.new_dependencies.empty? && diff.changed_dependencies.empty?
      puts "No differences found between Gemfile.lock files"
    end
  end
end

options = parse_options
process_diff(options[:old_lockfile], options[:new_lockfile], json: options[:json])
